using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using SQLite;

namespace LogMyLife.Domain.Data
{
    /// <summary>
    /// A column definition for a category
    /// </summary>
    public class Column : IStorable
    {
        [PrimaryKey, AutoIncrement]
        public int ColumnID { get; set; }

        //[ForeignKey(typeof(Category))]
        [Indexed]
        public int CategoryID { get; set; }

        [MaxLength(255)]
        public string Name { get; set; }

        /// <summary>
        /// Order that the column appears inside the category
        /// </summary>
        public int Order { get; set; }

        /// <summary>
        /// Key columns are shown in the title of records, they're the fields that identify it
        /// </summary>
        public bool IsKey { get; set; }

        /// <summary>
        /// Active columns are able to be edited and are shown, inactive columns are hidden
        /// </summary>
        public bool IsActive { get; set; }

        /// <summary>
        /// Review columns are reserved and generated by the app for reviewing the object,
        /// Non review columns aim to describe the object
        /// </summary>
        public bool IsReview { get; set; }


        //[ManyToOne]
        //public Category Category { get; set; }


        /// <summary>
        /// Reserved DB audit field - is this object flagged as deleted? Allows items to not be removed
        /// from DB, preserving information
        /// </summary>
        public bool IsRecordDeleted { get; set; }

        /// <summary>
        /// Time that the DB record (this object) was last edited, is a reserved DB audit field
        /// </summary>
        public DateTime RecordModifed { get; set; }

        /// <summary>
        /// Time that the DB record (this object) was created, is a reserved DB audit field
        /// </summary>
        public DateTime RecordCreated { get; set; }

        public override string ToString()
        {
            return string.Format($"ColId: {ColumnID}, Name: {Name}, CatId: {CategoryID}, Order: {Order}, IsKey: {IsKey}, IsActive: {IsActive}, IsReview: {IsReview}");
        }

    }
}
